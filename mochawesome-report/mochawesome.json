{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-18T10:50:41.911Z",
    "end": "2024-07-18T10:50:41.940Z",
    "duration": 29,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "38daa970-0474-4841-b762-b6efa386942c",
      "title": "",
      "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS FOR GIT/API automatic tests/tests/user/get-user-logout.spec.js",
      "file": "/tests/user/get-user-logout.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c853cf61-c61d-45c0-a006-ac17ed93736f",
          "title": "GET logout",
          "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS FOR GIT/API automatic tests/tests/user/get-user-logout.spec.js",
          "file": "/tests/user/get-user-logout.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should log out a user of store",
              "fullTitle": "GET logout should log out a user of store",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange:\nconst expectedStatusCode = 200;\n// Act:\nlet responseText;\nlet responseStatusCode;\ntry {\n  const response = await request.get('user/logout')\n} catch (error) {\n  responseText = error.rawResponse;\n  responseStatusCode = error.statusCode;\n}\n// Assert:\nexpect(responseStatusCode).to.be.equal(\n  expectedStatusCode,\n  `For GET user/logout we expect status code ${expectedStatusCode}`,\n);",
              "err": {},
              "uuid": "5567cc8f-3a05-4bc5-96e1-7277d37ba066",
              "parentUUID": "c853cf61-c61d-45c0-a006-ac17ed93736f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5567cc8f-3a05-4bc5-96e1-7277d37ba066"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": "true",
        "reportTitle": "My Custom Title",
        "showPassed": "true"
      },
      "version": "6.2.0"
    }
  }
}