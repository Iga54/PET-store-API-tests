{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-01T09:37:59.475Z",
    "end": "2024-07-01T09:37:59.525Z",
    "duration": 50,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a537eac6-d1e0-4813-bc19-ec9b5057b66e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6af89c37-576b-4b91-84c7-edc4fa175169",
          "title": "GET/user/login",
          "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS/API automatic tests/tests/user/login-user.spec.js",
          "file": "/tests/user/login-user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login a user of store with params",
              "fullTitle": "GET/user/login should login a user of store with params",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange:\nconst expectedStatusCode = 200;\nconst username = userData.username;\nconst password = userData.password;\n// Act:\nconst response = await request.get(\n  `v2/user/login?username=${username}&password=${password}`,\n);\n// Assert:\nexpect(response.statusCode).to.be.equal(\n  expectedStatusCode,\n  `ForGET/user/login we expect status code ${expectedStatusCode}`,\n);",
              "err": {},
              "uuid": "9af12057-aa66-4019-ac10-b5fa1f967df2",
              "parentUUID": "6af89c37-576b-4b91-84c7-edc4fa175169",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9af12057-aa66-4019-ac10-b5fa1f967df2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "70411ae1-4854-4863-bd1a-c250cf849f85",
          "title": "GET/logout",
          "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS/API automatic tests/tests/user/user-logout.spec.js",
          "file": "/tests/user/user-logout.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should log out a user of store",
              "fullTitle": "GET/logout should log out a user of store",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange:\nconst expectedStatusCode = 200;\n// Act:\nconst response = await request.get('v2/user/logout');\n// Assert:\nexpect(response.statusCode).to.be.equal(\n  expectedStatusCode,\n  `ForGET/user/login we expect status code ${expectedStatusCode}`,\n  expect(response.body.message).to.include(\"ok\")\n);",
              "err": {},
              "uuid": "66bfbded-b9da-4dcd-b843-4ed095b7a3b0",
              "parentUUID": "70411ae1-4854-4863-bd1a-c250cf849f85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66bfbded-b9da-4dcd-b843-4ed095b7a3b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": "true",
        "reportTitle": "My Custom Title",
        "showPassed": "true"
      },
      "version": "6.2.0"
    }
  }
}