{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-07-01T12:45:18.219Z",
    "end": "2024-07-01T12:45:18.246Z",
    "duration": 27,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f5ce2a50-02c5-4693-82af-369a3864b733",
      "title": "",
      "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS/API automatic tests/tests/user/login-user.spec.js",
      "file": "/tests/user/login-user.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b78e5b8f-6c13-4bff-8ff7-3701ec6b74d2",
          "title": "GET/user/login",
          "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS/API automatic tests/tests/user/login-user.spec.js",
          "file": "/tests/user/login-user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login a user of store with params",
              "fullTitle": "GET/user/login should login a user of store with params",
              "timedOut": false,
              "duration": 21,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Arrange:\nconst expectedStatusCode = 200;\nconst username = userData.username;\nconst password = userData.password;\n// Act:\nconst response = await request.get(\n  `v2/user/login?username=${username}&password=${password}`,\n);\n// Assert:\nexpect(response.statusCode).to.be.equal(\n  expectedStatusCode,\n  `ForGET/user/login we expect status code ${expectedStatusCode}`,\n);\nexpect(response.body).to.be.deep.equal(username)",
              "err": {
                "message": "AssertionError: expected { code: 200, type: 'unknown', …(1) } to deeply equal 'Tom'",
                "estack": "AssertionError: expected { code: 200, type: 'unknown', …(1) } to deeply equal 'Tom'\n    at Context.<anonymous> (tests/user/login-user.spec.js:19:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a48c324b-ac9b-4fe3-b949-8a98dce06a07",
              "parentUUID": "b78e5b8f-6c13-4bff-8ff7-3701ec6b74d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a48c324b-ac9b-4fe3-b949-8a98dce06a07"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": "true",
        "reportTitle": "My Custom Title",
        "showPassed": "true"
      },
      "version": "6.2.0"
    }
  }
}