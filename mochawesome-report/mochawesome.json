{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-01T13:27:31.587Z",
    "end": "2024-07-01T13:27:31.618Z",
    "duration": 31,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a2abcbda-37df-4cdc-8106-67a4ac786590",
      "title": "",
      "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS/API automatic tests/tests/user/create-user.spec.js",
      "file": "/tests/user/create-user.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fb2ea183-172c-49ba-a579-4853a836eab7",
          "title": "Creating user account",
          "fullFile": "/Users/iga/Desktop/Projects/PROJECT AUTOMATIC TESTS/API automatic tests/tests/user/create-user.spec.js",
          "file": "/tests/user/create-user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create user account with input data",
              "fullTitle": "Creating user account should create user account with input data",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange:\nconst expectedStatusCode = 200;\nconst username = userData.username;\nconst firstName = faker.lorem.word(5);\nconst lastName = faker.lorem.word(7);\nconst email = faker.internet.email(10);\nconst password = userData.password;\nconst phone = faker.number.int(9);\nconst userInput = {\n  username,\n  firstName,\n  lastName,\n  email,\n  password,\n  phone,\n};\n// Act:\nconst response = await request.post('v2/user').send(userInput);\n// Assert:\nexpect(response.statusCode).to.be.equal(\n  expectedStatusCode,\n  `For POST/v2/user we expect status code ${expectedStatusCode}`,\n);\nconsole.log(response.body)",
              "err": {},
              "uuid": "82677cba-2235-452f-9d76-96dbb0deddb9",
              "parentUUID": "fb2ea183-172c-49ba-a579-4853a836eab7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82677cba-2235-452f-9d76-96dbb0deddb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": "true",
        "reportTitle": "My Custom Title",
        "showPassed": "true"
      },
      "version": "6.2.0"
    }
  }
}